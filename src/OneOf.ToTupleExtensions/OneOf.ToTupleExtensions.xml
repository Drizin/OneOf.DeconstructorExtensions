<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OneOf.ToTupleExtensions</name>
    </assembly>
    <members>
        <member name="T:OneOf.OneOfBaseToTupleExtensions">
            <summary>
            Extensions that converts the OneOf{} into a Tuple{} or ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types
            </summary>
        </member>
        <member name="T:OneOf.OneOfBaseToTupleExtensions.RequireStruct`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="T:OneOf.OneOfBaseToTupleExtensions.RequireClass`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToTupleExtensions.ToTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="T:OneOf.OneOfBaseToValueTupleExtensions">
            <summary>
            Extensions that converts the OneOf{} into a Tuple{} or ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types
            </summary>
        </member>
        <member name="T:OneOf.OneOfBaseToValueTupleExtensions.RequireStruct`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="T:OneOf.OneOfBaseToValueTupleExtensions.RequireClass`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``2(OneOf.OneOfBase{``0,``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``3(OneOf.OneOfBase{``0,``1,``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``4(OneOf.OneOfBase{``0,``1,``2,``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``5(OneOf.OneOfBase{``0,``1,``2,``3,``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``6(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfBaseToValueTupleExtensions.ToValueTuple``7(OneOf.OneOfBase{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfBaseToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="T:OneOf.OneOfToTupleExtensions">
            <summary>
            Extensions that converts the OneOf{} into a Tuple{} or ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types
            </summary>
        </member>
        <member name="T:OneOf.OneOfToTupleExtensions.RequireStruct`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="T:OneOf.OneOfToTupleExtensions.RequireClass`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireClass{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireClass{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireClass{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireClass{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireClass{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireClass{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToTupleExtensions.ToTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToTupleExtensions.RequireStruct{``0},OneOf.OneOfToTupleExtensions.RequireStruct{``1},OneOf.OneOfToTupleExtensions.RequireStruct{``2},OneOf.OneOfToTupleExtensions.RequireStruct{``3},OneOf.OneOfToTupleExtensions.RequireStruct{``4},OneOf.OneOfToTupleExtensions.RequireStruct{``5},OneOf.OneOfToTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a Tuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="T:OneOf.OneOfToValueTupleExtensions">
            <summary>
            Extensions that converts the OneOf{} into a Tuple{} or ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types
            </summary>
        </member>
        <member name="T:OneOf.OneOfToValueTupleExtensions.RequireStruct`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="T:OneOf.OneOfToValueTupleExtensions.RequireClass`1">
            <summary>
            Constraints are not part of the signature, but parameters are.
            Constraints in parameters are enforced during overload resolution, so we put the constraints in optional disambiguation parameters.
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``2(OneOf.OneOf{``0,``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``3(OneOf.OneOf{``0,``1,``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``4(OneOf.OneOf{``0,``1,``2,``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``5(OneOf.OneOf{``0,``1,``2,``3,``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``6(OneOf.OneOf{``0,``1,``2,``3,``4,``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireClass{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireClass{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireClass{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireClass{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireClass{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireClass{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireClass{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
        <member name="M:OneOf.OneOfToValueTupleExtensions.ToValueTuple``7(OneOf.OneOf{``0,``1,``2,``3,``4,``5,``6},OneOf.OneOfToValueTupleExtensions.RequireStruct{``0},OneOf.OneOfToValueTupleExtensions.RequireStruct{``1},OneOf.OneOfToValueTupleExtensions.RequireStruct{``2},OneOf.OneOfToValueTupleExtensions.RequireStruct{``3},OneOf.OneOfToValueTupleExtensions.RequireStruct{``4},OneOf.OneOfToValueTupleExtensions.RequireStruct{``5},OneOf.OneOfToValueTupleExtensions.RequireStruct{``6})">
            <summary>
            Converts the OneOf{} into a ValueTuple{} that can be desconstructed.
            Only one element of the Tuple will have a non-null value.
            All generic types of OneOf{} should either be non-nullable value types or non-nullable reference types.
            All optional parameters named "dummy" will be ignored - they are just used for compiler disambiguation (to find the right combination of reference-types and value-types)
            </summary>
        </member>
    </members>
</doc>
